CSS布局(三) 布局模型
1，flow模型：html正常的文档流
2，float模型：脱离了正常的文档流
3，layer模型：有三种属性，position （相对于最近一个的父级进行的定位，如果父级都没有设置定位属性，那就相对于body定位，原来在正常的文档流中位置将会被删除，相对于其最接近的一个具有定位属性的父包含块进行绝对定位） ，relative（相对于正常的文档流进行定位，原来的位置还存在），fixed（普通的理解就是钉在了屏幕的一个位置，即使滚动条滚动也还在那个位子），
z-index：1，生效有条件，就是一定要设定了position属性才能生效。2，如果父元素z-index有效，那么子元素无论是否设置z-index都和父元素一致，会在父元素上方 3，如果父元素z-index失效（未定位或者使用默认值），那么定位子元素的z-index设置生效，4，如果两个元素都没有设置z-index，使用默认值，一个定位一个没有定位，那么定位元素覆盖未定位元素，5，如果两个元素都没有定位发生位置重合现象或者两个都已定位元素且z-index相同发生位置重合现象，那么按文档流顺序，后面的覆盖前面的。
清除浮动;.clearfix {
       overflow: auto;
     }


对于定位的理解：
1、对于内联元素的理解，可以理解为盒子模型中的内容content部分，所以他们没有外边距，内边距的设定
对于块级元素，注意其外边距折叠,
响应式布局
媒体查询工具
@media screen and (min-width:600px) {}
@media screen and (mmn-width:3600px) {}
flex布局：
float布局的包裹性  ，文字环绕的后遗症 ，还有清空格的特性   。1.设置float属性后，元素实际上会inline-block块状化。 2.可以去掉排列间的空格
伪类  :after 选择器在被选元素的内容后面插入内容。
CSS布局(六) 对齐方式
一、水平居中：
1，如果被设置元素为文本、图片等行内元素时，在父元素中设置text-align:center实现行内元素水平居中，将子元素的display设置为inline-block，使子元素变成行内元素
2，当被设置元素为定宽块级元素时用 text-align：center 就不起作用了。可以通过设置“左右margin”值为“auto”来实现居中的。（定宽）
(3)块状元素的水平居中（不定定宽）

在实际工作中我们会遇到需要为“不定宽度的块级元素”设置居中，比如网页上的分页导航，因为分页的数量是不确定的，所以我们不能通过设置宽度来限制它的弹性。

可以直接给不定宽的块级元素设置text-align：center来实现，也可以给父元素加text-align:center 来实现居中效果。

当不定宽块级元素的宽度不要占一行时，可以设置display 为 inline 类型或inline-block（设置为 行内元素 显示或行内块元素）
二、垂直居中：
和水平居中一样，这里要讲垂直居中，首先设定两个条件即父元素是盒子容器且高度已经设定

场景1：子元素是行内元素，高度是由其内容撑开的

这种情况下，需要通过设定父元素的line-height为其高度来使得子元素垂直居中
场景2：子元素是块级元素但是子元素高度没有设定，在这种情况下实际上是不知道子元素的高度的，无法通过计算得到padding或margin来调整，但是还是存在一些解法。

通过给父元素设定display:table-cell;vertical-align:middle来解决
场景3：子元素是块级元素且高度已经设定

计算子元素的margin-top或margin-bottom，计算方法为父(元素高度-子元素高度)/2
三、水平垂直居中：

3.1水平对齐+行高

text-align + line-height实现单行文本水平垂直居中
3.2水平+垂直对齐

1. text-align + vertical-align　　在父元素设置text-align和vertical-align，并将父元素设置为table-cell元素，子元素设置为inline-block元素
2.若子元素是图像，可不使用table-cell，而是其父元素用行高替代高度，且字体大小设为0。子元素本身设置vertical-align:middle
3.3相对+绝对定位
使用absolute，利用绝对定位元素的盒模型特性，在偏移属性为确定值的基础上，设置margin:auto
